{"version":3,"sources":["network.js","App.js","reportWebVitals.js","index.js"],"names":["nodes","DataSet","id","label","edges","from","to","container","document","getElementById","data","Network","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2NAGIA,EAAQ,IAAIC,IAAQ,CACpB,CAACC,GAAI,EAAGC,MAAO,UACf,CAACD,GAAI,EAAGC,MAAO,UACf,CAACD,GAAI,EAAGC,MAAO,UACf,CAACD,GAAI,EAAGC,MAAO,UACf,CAACD,GAAI,EAAGC,MAAO,YAIfC,EAAQ,IAAIH,IAAQ,CACpB,CAACI,KAAM,EAAGC,GAAI,GACd,CAACD,KAAM,EAAGC,GAAI,GACd,CAACD,KAAM,EAAGC,GAAI,GACd,CAACD,KAAM,EAAGC,GAAI,GACd,CAACD,KAAM,EAAGC,GAAI,KAGdC,EAAYC,SAASC,eAAe,aACpCC,EAAO,CACPV,MAAOA,EACPI,MAAOA,G,GAIG,IAAIO,IAAQJ,EAAWG,EADvB,I,MCFCE,MArBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,sBAAKX,GAAG,OAAR,UACM,qBAAKA,GAAG,QAAR,SACI,2EAEJ,sBAAKA,GAAG,oBAAR,UACE,4CACA,+HAIV,+BACE,qBAAKA,GAAG,oBCNDY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASC,eAAe,SAM1BK,M","file":"static/js/main.22f9637d.chunk.js","sourcesContent":["import {DataSet, Network} from 'vis-network/standalone'\n\n// create an array of nodes\nvar nodes = new DataSet([\n    {id: 1, label: \"Node 1\"},\n    {id: 2, label: \"Node 2\"},\n    {id: 3, label: \"Node 3\"},\n    {id: 4, label: \"Node 4\"},\n    {id: 5, label: \"Node 5\"},\n]);\n\n// create an array of edges\nvar edges = new DataSet([\n    {from: 1, to: 3},\n    {from: 1, to: 2},\n    {from: 2, to: 4},\n    {from: 2, to: 5},\n    {from: 3, to: 3},\n]);\n\nvar container = document.getElementById(\"myNetwork\");\nvar data = {\n    nodes: nodes,\n    edges: edges,\n};\n\nvar options = {};\nvar network = new Network(container, data, options);","import './App.css';\nimport './network';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"text\">\n              <div id=\"title\">\n                  <h1>CPSC 447 Group 9 Network visualization!</h1>\n              </div>\n              <div id=\"Algorithm Summary\">\n                <h2>Algorithm:</h2>\n                <p>We are Implementing Open Shortest Path First (OSPF) as our link-state routing protocl.</p>\n              </div>\n          </div>\n      </header>\n      <body>\n        <div id=\"myNetwork\"></div>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}